// Code generated by go-swagger; DO NOT EDIT.

package metadaservices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewApisParams creates a new ApisParams object
// with the default values initialized.
func NewApisParams() ApisParams {

	var (
		// initialize parameters with default values

		lengthDefault = int64(100)
	)

	return ApisParams{
		Length: &lengthDefault,
	}
}

// ApisParams contains all the bound params for the apis operation
// typically these are obtained from a http.Request
//
// swagger:parameters apis
type ApisParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  In: query
	*/
	Keywords *string
	/*
	  In: query
	  Default: 100
	*/
	Length *int64
	/*
	  In: query
	*/
	Start *int64
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewApisParams() beforehand.
func (o *ApisParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qKeywords, qhkKeywords, _ := qs.GetOK("keywords")
	if err := o.bindKeywords(qKeywords, qhkKeywords, route.Formats); err != nil {
		res = append(res, err)
	}

	qLength, qhkLength, _ := qs.GetOK("length")
	if err := o.bindLength(qLength, qhkLength, route.Formats); err != nil {
		res = append(res, err)
	}

	qStart, qhkStart, _ := qs.GetOK("start")
	if err := o.bindStart(qStart, qhkStart, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ApisParams) bindKeywords(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	o.Keywords = &raw

	return nil
}

func (o *ApisParams) bindLength(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		// Default values have been previously initialized by NewApisParams()
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("length", "query", "int64", raw)
	}
	o.Length = &value

	return nil
}

func (o *ApisParams) bindStart(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("start", "query", "int64", raw)
	}
	o.Start = &value

	return nil
}
