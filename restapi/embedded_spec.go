// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is an API service to list all service metatdata that can be used in a place it contains",
    "title": "The API dictory list",
    "version": "0.0.1"
  },
  "paths": {
    "/apis": {
      "get": {
        "tags": [
          "metadaservices"
        ],
        "operationId": "apis",
        "parameters": [
          {
            "type": "string",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "start",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 100,
            "name": "length",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all APIs the directory has, the result contains a collection of items, each item represents an API metadata service.",
            "schema": {
              "$ref": "#/definitions/directory"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "directory": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/service"
          }
        },
        "version": {
          "description": "the directory version of this service",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "service": {
      "type": "object",
      "required": [
        "name",
        "version",
        "restUrl"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "documentationLink": {
          "type": "string"
        },
        "id": {
          "description": "the version of the specified service",
          "type": "string"
        },
        "name": {
          "description": "the name of a specified service",
          "type": "string",
          "minLength": 1
        },
        "restUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "description": "the version of the specified service",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is an API service to list all service metatdata that can be used in a place it contains",
    "title": "The API dictory list",
    "version": "0.0.1"
  },
  "paths": {
    "/apis": {
      "get": {
        "tags": [
          "metadaservices"
        ],
        "operationId": "apis",
        "parameters": [
          {
            "type": "string",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "start",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 100,
            "name": "length",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all APIs the directory has, the result contains a collection of items, each item represents an API metadata service.",
            "schema": {
              "$ref": "#/definitions/directory"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "directory": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/service"
          }
        },
        "version": {
          "description": "the directory version of this service",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "service": {
      "type": "object",
      "required": [
        "name",
        "version",
        "restUrl"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "documentationLink": {
          "type": "string"
        },
        "id": {
          "description": "the version of the specified service",
          "type": "string"
        },
        "name": {
          "description": "the name of a specified service",
          "type": "string",
          "minLength": 1
        },
        "restUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "description": "the version of the specified service",
          "type": "string"
        }
      }
    }
  }
}`))
}
